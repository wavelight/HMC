ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB132:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * @file           : main.c
   4:Src/main.c    ****   * @brief          : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   * This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  13:Src/main.c    ****   * All rights reserved.
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  16:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  19:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  20:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  21:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  22:Src/main.c    ****   *    and/or other materials provided with the distribution.
  23:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  24:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  25:Src/main.c    ****   *    derived from this software without specific written permission.
  26:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  27:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  28:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  29:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  30:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  31:Src/main.c    ****   *    this license. 
  32:Src/main.c    ****   *
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 2


  33:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  34:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  35:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  36:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  37:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  38:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  39:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  40:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  41:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  42:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  43:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  44:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Src/main.c    ****   *
  46:Src/main.c    ****   ******************************************************************************
  47:Src/main.c    ****   */
  48:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  49:Src/main.c    **** #include "main.h"
  50:Src/main.c    **** #include "stm32f4xx_hal.h"
  51:Src/main.c    **** #include "usb_device.h"
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE BEGIN Includes */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END Includes */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  58:Src/main.c    **** ADC_HandleTypeDef hadc1;
  59:Src/main.c    **** 
  60:Src/main.c    **** SPI_HandleTypeDef hspi2;
  61:Src/main.c    **** 
  62:Src/main.c    **** TIM_HandleTypeDef htim1;
  63:Src/main.c    **** TIM_HandleTypeDef htim3;
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE BEGIN PV */
  66:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE END PV */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  71:Src/main.c    **** void SystemClock_Config(void);
  72:Src/main.c    **** static void MX_GPIO_Init(void);
  73:Src/main.c    **** static void MX_TIM1_Init(void);
  74:Src/main.c    **** static void MX_TIM3_Init(void);
  75:Src/main.c    **** static void MX_ADC1_Init(void);
  76:Src/main.c    **** static void MX_SPI2_Init(void);
  77:Src/main.c    **** 
  78:Src/main.c    **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE BEGIN PFP */
  81:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  82:Src/main.c    **** 
  83:Src/main.c    **** /* USER CODE END PFP */
  84:Src/main.c    **** 
  85:Src/main.c    **** /* USER CODE BEGIN 0 */
  86:Src/main.c    **** 
  87:Src/main.c    **** /* USER CODE END 0 */
  88:Src/main.c    **** 
  89:Src/main.c    **** /**
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 3


  90:Src/main.c    ****   * @brief  The application entry point.
  91:Src/main.c    ****   *
  92:Src/main.c    ****   * @retval None
  93:Src/main.c    ****   */
  94:Src/main.c    **** int main(void)
  95:Src/main.c    **** {
  96:Src/main.c    **** 	/* USER CODE BEGIN 1 */
  97:Src/main.c    **** 
  98:Src/main.c    **** 	/* USER CODE END 1 */
  99:Src/main.c    **** 
 100:Src/main.c    **** 	/* MCU Configuration----------------------------------------------------------*/
 101:Src/main.c    **** 
 102:Src/main.c    **** 	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 103:Src/main.c    **** 	HAL_Init();
 104:Src/main.c    **** 
 105:Src/main.c    **** 	/* USER CODE BEGIN Init */
 106:Src/main.c    **** 
 107:Src/main.c    **** 	/* USER CODE END Init */
 108:Src/main.c    **** 
 109:Src/main.c    **** 	/* Configure the system clock */
 110:Src/main.c    **** 	SystemClock_Config();
 111:Src/main.c    **** 
 112:Src/main.c    **** 	/* USER CODE BEGIN SysInit */
 113:Src/main.c    **** 
 114:Src/main.c    **** 	/* USER CODE END SysInit */
 115:Src/main.c    **** 
 116:Src/main.c    **** 	/* Initialize all configured peripherals */
 117:Src/main.c    **** 	MX_GPIO_Init();
 118:Src/main.c    **** 	MX_TIM1_Init();
 119:Src/main.c    **** 	MX_TIM3_Init();
 120:Src/main.c    **** 	MX_ADC1_Init();
 121:Src/main.c    **** 	MX_SPI2_Init();
 122:Src/main.c    **** 	MX_USB_DEVICE_Init();
 123:Src/main.c    **** 	/* USER CODE BEGIN 2 */
 124:Src/main.c    **** 
 125:Src/main.c    **** 	/* USER CODE END 2 */
 126:Src/main.c    **** 
 127:Src/main.c    **** 	/* Infinite loop */
 128:Src/main.c    **** 	/* USER CODE BEGIN WHILE */
 129:Src/main.c    **** 	while (1)
 130:Src/main.c    **** 	{
 131:Src/main.c    **** 
 132:Src/main.c    **** 		/* USER CODE END WHILE */
 133:Src/main.c    **** 
 134:Src/main.c    **** 		/* USER CODE BEGIN 3 */
 135:Src/main.c    **** 		HAL_Delay(200);
 136:Src/main.c    **** 		HAL_GPIO_TogglePin(LED_BLUE_GPIO_Port, LED_BLUE_Pin);
 137:Src/main.c    **** 		HAL_GPIO_TogglePin(LED_RED_GPIO_Port, LED_RED_Pin);
 138:Src/main.c    **** 		HAL_GPIO_TogglePin(LED_ORANGE_GPIO_Port, LED_ORANGE_Pin);
 139:Src/main.c    **** 		HAL_GPIO_TogglePin(LED_GREEN_GPIO_Port, LED_GREEN_Pin);
 140:Src/main.c    **** 	}
 141:Src/main.c    **** 	/* USER CODE END 3 */
 142:Src/main.c    **** }
 143:Src/main.c    **** 
 144:Src/main.c    **** /**
 145:Src/main.c    ****   * @brief System Clock Configuration
 146:Src/main.c    ****   * @retval None
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 4


 147:Src/main.c    ****   */
 148:Src/main.c    **** void SystemClock_Config(void)
 149:Src/main.c    **** {
 150:Src/main.c    **** 
 151:Src/main.c    **** 	RCC_OscInitTypeDef RCC_OscInitStruct;
 152:Src/main.c    **** 	RCC_ClkInitTypeDef RCC_ClkInitStruct;
 153:Src/main.c    **** 
 154:Src/main.c    **** 	/**Configure the main internal regulator output voltage 
 155:Src/main.c    ****     */
 156:Src/main.c    **** 	__HAL_RCC_PWR_CLK_ENABLE();
 157:Src/main.c    **** 
 158:Src/main.c    **** 	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 159:Src/main.c    **** 
 160:Src/main.c    **** 	/**Initializes the CPU, AHB and APB busses clocks 
 161:Src/main.c    ****     */
 162:Src/main.c    **** 	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 163:Src/main.c    **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 164:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 165:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 166:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 167:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLN = 168;
 168:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 169:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLQ = 7;
 170:Src/main.c    **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 171:Src/main.c    **** 	{
 172:Src/main.c    **** 		_Error_Handler(__FILE__, __LINE__);
 173:Src/main.c    **** 	}
 174:Src/main.c    **** 
 175:Src/main.c    **** 	/**Initializes the CPU, AHB and APB busses clocks 
 176:Src/main.c    ****     */
 177:Src/main.c    **** 	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | RC
 178:Src/main.c    **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 179:Src/main.c    **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 180:Src/main.c    **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 181:Src/main.c    **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 182:Src/main.c    **** 
 183:Src/main.c    **** 	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 184:Src/main.c    **** 	{
 185:Src/main.c    **** 		_Error_Handler(__FILE__, __LINE__);
 186:Src/main.c    **** 	}
 187:Src/main.c    **** 
 188:Src/main.c    **** 	/**Configure the Systick interrupt time 
 189:Src/main.c    ****     */
 190:Src/main.c    **** 	HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 191:Src/main.c    **** 
 192:Src/main.c    **** 	/**Configure the Systick 
 193:Src/main.c    ****     */
 194:Src/main.c    **** 	HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 195:Src/main.c    **** 
 196:Src/main.c    **** 	/* SysTick_IRQn interrupt configuration */
 197:Src/main.c    **** 	HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 198:Src/main.c    **** }
 199:Src/main.c    **** 
 200:Src/main.c    **** /* ADC1 init function */
 201:Src/main.c    **** static void MX_ADC1_Init(void)
 202:Src/main.c    **** {
 203:Src/main.c    **** 
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 5


 204:Src/main.c    **** 	ADC_ChannelConfTypeDef sConfig;
 205:Src/main.c    **** 
 206:Src/main.c    **** 	/**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conve
 207:Src/main.c    ****     */
 208:Src/main.c    **** 	hadc1.Instance = ADC1;
 209:Src/main.c    **** 	hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 210:Src/main.c    **** 	hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 211:Src/main.c    **** 	hadc1.Init.ScanConvMode = DISABLE;
 212:Src/main.c    **** 	hadc1.Init.ContinuousConvMode = DISABLE;
 213:Src/main.c    **** 	hadc1.Init.DiscontinuousConvMode = DISABLE;
 214:Src/main.c    **** 	hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 215:Src/main.c    **** 	hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 216:Src/main.c    **** 	hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 217:Src/main.c    **** 	hadc1.Init.NbrOfConversion = 1;
 218:Src/main.c    **** 	hadc1.Init.DMAContinuousRequests = DISABLE;
 219:Src/main.c    **** 	hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 220:Src/main.c    **** 	if (HAL_ADC_Init(&hadc1) != HAL_OK)
 221:Src/main.c    **** 	{
 222:Src/main.c    **** 		_Error_Handler(__FILE__, __LINE__);
 223:Src/main.c    **** 	}
 224:Src/main.c    **** 
 225:Src/main.c    **** 	/**Configure for the selected ADC regular channel its corresponding rank in the sequencer and its 
 226:Src/main.c    ****     */
 227:Src/main.c    **** 	sConfig.Channel = ADC_CHANNEL_1;
 228:Src/main.c    **** 	sConfig.Rank = 1;
 229:Src/main.c    **** 	sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 230:Src/main.c    **** 	if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 231:Src/main.c    **** 	{
 232:Src/main.c    **** 		_Error_Handler(__FILE__, __LINE__);
 233:Src/main.c    **** 	}
 234:Src/main.c    **** }
 235:Src/main.c    **** 
 236:Src/main.c    **** /* SPI2 init function */
 237:Src/main.c    **** static void MX_SPI2_Init(void)
 238:Src/main.c    **** {
 239:Src/main.c    **** 
 240:Src/main.c    **** 	/* SPI2 parameter configuration*/
 241:Src/main.c    **** 	hspi2.Instance = SPI2;
 242:Src/main.c    **** 	hspi2.Init.Mode = SPI_MODE_MASTER;
 243:Src/main.c    **** 	hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 244:Src/main.c    **** 	hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 245:Src/main.c    **** 	hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 246:Src/main.c    **** 	hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 247:Src/main.c    **** 	hspi2.Init.NSS = SPI_NSS_HARD_OUTPUT;
 248:Src/main.c    **** 	hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 249:Src/main.c    **** 	hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 250:Src/main.c    **** 	hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 251:Src/main.c    **** 	hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 252:Src/main.c    **** 	hspi2.Init.CRCPolynomial = 10;
 253:Src/main.c    **** 	if (HAL_SPI_Init(&hspi2) != HAL_OK)
 254:Src/main.c    **** 	{
 255:Src/main.c    **** 		_Error_Handler(__FILE__, __LINE__);
 256:Src/main.c    **** 	}
 257:Src/main.c    **** }
 258:Src/main.c    **** 
 259:Src/main.c    **** /* TIM1 init function */
 260:Src/main.c    **** static void MX_TIM1_Init(void)
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 6


 261:Src/main.c    **** {
 262:Src/main.c    **** 
 263:Src/main.c    **** 	TIM_MasterConfigTypeDef sMasterConfig;
 264:Src/main.c    **** 	TIM_OC_InitTypeDef sConfigOC;
 265:Src/main.c    **** 	TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 266:Src/main.c    **** 
 267:Src/main.c    **** 	htim1.Instance = TIM1;
 268:Src/main.c    **** 	htim1.Init.Prescaler = 0;
 269:Src/main.c    **** 	htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 270:Src/main.c    **** 	htim1.Init.Period = 0;
 271:Src/main.c    **** 	htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 272:Src/main.c    **** 	htim1.Init.RepetitionCounter = 0;
 273:Src/main.c    **** 	if (HAL_TIM_OC_Init(&htim1) != HAL_OK)
 274:Src/main.c    **** 	{
 275:Src/main.c    **** 		_Error_Handler(__FILE__, __LINE__);
 276:Src/main.c    **** 	}
 277:Src/main.c    **** 
 278:Src/main.c    **** 	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 279:Src/main.c    **** 	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 280:Src/main.c    **** 	if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 281:Src/main.c    **** 	{
 282:Src/main.c    **** 		_Error_Handler(__FILE__, __LINE__);
 283:Src/main.c    **** 	}
 284:Src/main.c    **** 
 285:Src/main.c    **** 	sConfigOC.OCMode = TIM_OCMODE_TIMING;
 286:Src/main.c    **** 	sConfigOC.Pulse = 0;
 287:Src/main.c    **** 	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 288:Src/main.c    **** 	sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 289:Src/main.c    **** 	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 290:Src/main.c    **** 	sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 291:Src/main.c    **** 	sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 292:Src/main.c    **** 	if (HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 293:Src/main.c    **** 	{
 294:Src/main.c    **** 		_Error_Handler(__FILE__, __LINE__);
 295:Src/main.c    **** 	}
 296:Src/main.c    **** 
 297:Src/main.c    **** 	if (HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 298:Src/main.c    **** 	{
 299:Src/main.c    **** 		_Error_Handler(__FILE__, __LINE__);
 300:Src/main.c    **** 	}
 301:Src/main.c    **** 
 302:Src/main.c    **** 	if (HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 303:Src/main.c    **** 	{
 304:Src/main.c    **** 		_Error_Handler(__FILE__, __LINE__);
 305:Src/main.c    **** 	}
 306:Src/main.c    **** 
 307:Src/main.c    **** 	sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 308:Src/main.c    **** 	sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 309:Src/main.c    **** 	sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 310:Src/main.c    **** 	sBreakDeadTimeConfig.DeadTime = 0;
 311:Src/main.c    **** 	sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 312:Src/main.c    **** 	sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 313:Src/main.c    **** 	sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 314:Src/main.c    **** 	if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 315:Src/main.c    **** 	{
 316:Src/main.c    **** 		_Error_Handler(__FILE__, __LINE__);
 317:Src/main.c    **** 	}
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 7


 318:Src/main.c    **** 
 319:Src/main.c    **** 	HAL_TIM_MspPostInit(&htim1);
 320:Src/main.c    **** }
 321:Src/main.c    **** 
 322:Src/main.c    **** /* TIM3 init function */
 323:Src/main.c    **** static void MX_TIM3_Init(void)
 324:Src/main.c    **** {
 325:Src/main.c    **** 
 326:Src/main.c    **** 	TIM_HallSensor_InitTypeDef sConfig;
 327:Src/main.c    **** 	TIM_MasterConfigTypeDef sMasterConfig;
 328:Src/main.c    **** 
 329:Src/main.c    **** 	htim3.Instance = TIM3;
 330:Src/main.c    **** 	htim3.Init.Prescaler = 0;
 331:Src/main.c    **** 	htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 332:Src/main.c    **** 	htim3.Init.Period = 0;
 333:Src/main.c    **** 	htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 334:Src/main.c    **** 	sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 335:Src/main.c    **** 	sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 336:Src/main.c    **** 	sConfig.IC1Filter = 0;
 337:Src/main.c    **** 	sConfig.Commutation_Delay = 0;
 338:Src/main.c    **** 	if (HAL_TIMEx_HallSensor_Init(&htim3, &sConfig) != HAL_OK)
 339:Src/main.c    **** 	{
 340:Src/main.c    **** 		_Error_Handler(__FILE__, __LINE__);
 341:Src/main.c    **** 	}
 342:Src/main.c    **** 
 343:Src/main.c    **** 	sMasterConfig.MasterOutputTrigger = TIM_TRGO_OC2REF;
 344:Src/main.c    **** 	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 345:Src/main.c    **** 	if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 346:Src/main.c    **** 	{
 347:Src/main.c    **** 		_Error_Handler(__FILE__, __LINE__);
 348:Src/main.c    **** 	}
 349:Src/main.c    **** }
 350:Src/main.c    **** 
 351:Src/main.c    **** /** Configure pins as 
 352:Src/main.c    ****         * Analog 
 353:Src/main.c    ****         * Input 
 354:Src/main.c    ****         * Output
 355:Src/main.c    ****         * EVENT_OUT
 356:Src/main.c    ****         * EXTI
 357:Src/main.c    **** */
 358:Src/main.c    **** static void MX_GPIO_Init(void)
 359:Src/main.c    **** {
  27              		.loc 1 359 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 48
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 70B5     		push	{r4, r5, r6, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  38 0002 8CB0     		sub	sp, sp, #48
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 64
  41              	.LBB2:
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 8


 360:Src/main.c    **** 
 361:Src/main.c    **** 	GPIO_InitTypeDef GPIO_InitStruct;
 362:Src/main.c    **** 
 363:Src/main.c    **** 	/* GPIO Ports Clock Enable */
 364:Src/main.c    **** 	__HAL_RCC_GPIOE_CLK_ENABLE();
  42              		.loc 1 364 0
  43 0004 0024     		movs	r4, #0
  44 0006 0194     		str	r4, [sp, #4]
  45 0008 3D4B     		ldr	r3, .L3
  46 000a 1A6B     		ldr	r2, [r3, #48]
  47 000c 42F01002 		orr	r2, r2, #16
  48 0010 1A63     		str	r2, [r3, #48]
  49 0012 1A6B     		ldr	r2, [r3, #48]
  50 0014 02F01002 		and	r2, r2, #16
  51 0018 0192     		str	r2, [sp, #4]
  52 001a 019A     		ldr	r2, [sp, #4]
  53              	.LBE2:
  54              	.LBB3:
 365:Src/main.c    **** 	__HAL_RCC_GPIOC_CLK_ENABLE();
  55              		.loc 1 365 0
  56 001c 0294     		str	r4, [sp, #8]
  57 001e 1A6B     		ldr	r2, [r3, #48]
  58 0020 42F00402 		orr	r2, r2, #4
  59 0024 1A63     		str	r2, [r3, #48]
  60 0026 1A6B     		ldr	r2, [r3, #48]
  61 0028 02F00402 		and	r2, r2, #4
  62 002c 0292     		str	r2, [sp, #8]
  63 002e 029A     		ldr	r2, [sp, #8]
  64              	.LBE3:
  65              	.LBB4:
 366:Src/main.c    **** 	__HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 366 0
  67 0030 0394     		str	r4, [sp, #12]
  68 0032 1A6B     		ldr	r2, [r3, #48]
  69 0034 42F08002 		orr	r2, r2, #128
  70 0038 1A63     		str	r2, [r3, #48]
  71 003a 1A6B     		ldr	r2, [r3, #48]
  72 003c 02F08002 		and	r2, r2, #128
  73 0040 0392     		str	r2, [sp, #12]
  74 0042 039A     		ldr	r2, [sp, #12]
  75              	.LBE4:
  76              	.LBB5:
 367:Src/main.c    **** 	__HAL_RCC_GPIOA_CLK_ENABLE();
  77              		.loc 1 367 0
  78 0044 0494     		str	r4, [sp, #16]
  79 0046 1A6B     		ldr	r2, [r3, #48]
  80 0048 42F00102 		orr	r2, r2, #1
  81 004c 1A63     		str	r2, [r3, #48]
  82 004e 1A6B     		ldr	r2, [r3, #48]
  83 0050 02F00102 		and	r2, r2, #1
  84 0054 0492     		str	r2, [sp, #16]
  85 0056 049A     		ldr	r2, [sp, #16]
  86              	.LBE5:
  87              	.LBB6:
 368:Src/main.c    **** 	__HAL_RCC_GPIOB_CLK_ENABLE();
  88              		.loc 1 368 0
  89 0058 0594     		str	r4, [sp, #20]
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 9


  90 005a 1A6B     		ldr	r2, [r3, #48]
  91 005c 42F00202 		orr	r2, r2, #2
  92 0060 1A63     		str	r2, [r3, #48]
  93 0062 1A6B     		ldr	r2, [r3, #48]
  94 0064 02F00202 		and	r2, r2, #2
  95 0068 0592     		str	r2, [sp, #20]
  96 006a 059A     		ldr	r2, [sp, #20]
  97              	.LBE6:
  98              	.LBB7:
 369:Src/main.c    **** 	__HAL_RCC_GPIOD_CLK_ENABLE();
  99              		.loc 1 369 0
 100 006c 0694     		str	r4, [sp, #24]
 101 006e 1A6B     		ldr	r2, [r3, #48]
 102 0070 42F00802 		orr	r2, r2, #8
 103 0074 1A63     		str	r2, [r3, #48]
 104 0076 1B6B     		ldr	r3, [r3, #48]
 105 0078 03F00803 		and	r3, r3, #8
 106 007c 0693     		str	r3, [sp, #24]
 107 007e 069B     		ldr	r3, [sp, #24]
 108              	.LBE7:
 370:Src/main.c    **** 
 371:Src/main.c    **** 	/*Configure GPIO pin Output Level */
 372:Src/main.c    **** 	HAL_GPIO_WritePin(GPIOD, DRV_CAL_Pin | DRV_FAULT_Pin | DRV_ENABLE_Pin | DRV_LED_Pin | LED_GREEN_Pi
 109              		.loc 1 372 0
 110 0080 204E     		ldr	r6, .L3+4
 111 0082 2246     		mov	r2, r4
 112 0084 4FF47F41 		mov	r1, #65280
 113 0088 3046     		mov	r0, r6
 114 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 115              	.LVL0:
 373:Src/main.c    **** 
 374:Src/main.c    **** 	/*Configure GPIO pins : USED_Pin USEDE0_Pin USEDE1_Pin */
 375:Src/main.c    **** 	GPIO_InitStruct.Pin = USED_Pin | USEDE0_Pin | USEDE1_Pin;
 116              		.loc 1 375 0
 117 008e 0B23     		movs	r3, #11
 118 0090 0793     		str	r3, [sp, #28]
 376:Src/main.c    **** 	GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 119              		.loc 1 376 0
 120 0092 0325     		movs	r5, #3
 121 0094 0895     		str	r5, [sp, #32]
 377:Src/main.c    **** 	GPIO_InitStruct.Pull = GPIO_NOPULL;
 122              		.loc 1 377 0
 123 0096 0994     		str	r4, [sp, #36]
 378:Src/main.c    **** 	HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 124              		.loc 1 378 0
 125 0098 07A9     		add	r1, sp, #28
 126 009a 1B48     		ldr	r0, .L3+8
 127 009c FFF7FEFF 		bl	HAL_GPIO_Init
 128              	.LVL1:
 379:Src/main.c    **** 
 380:Src/main.c    **** 	/*Configure GPIO pins : USEDC0_Pin USEDC3_Pin USEDC4_Pin USEDC10_Pin 
 381:Src/main.c    ****                            USEDC12_Pin */
 382:Src/main.c    **** 	GPIO_InitStruct.Pin = USEDC0_Pin | USEDC3_Pin | USEDC4_Pin | USEDC10_Pin | USEDC12_Pin;
 129              		.loc 1 382 0
 130 00a0 41F21943 		movw	r3, #5145
 131 00a4 0793     		str	r3, [sp, #28]
 383:Src/main.c    **** 	GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 10


 132              		.loc 1 383 0
 133 00a6 0895     		str	r5, [sp, #32]
 384:Src/main.c    **** 	GPIO_InitStruct.Pull = GPIO_NOPULL;
 134              		.loc 1 384 0
 135 00a8 0994     		str	r4, [sp, #36]
 385:Src/main.c    **** 	HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 136              		.loc 1 385 0
 137 00aa 07A9     		add	r1, sp, #28
 138 00ac 1748     		ldr	r0, .L3+12
 139 00ae FFF7FEFF 		bl	HAL_GPIO_Init
 140              	.LVL2:
 386:Src/main.c    **** 
 387:Src/main.c    **** 	/*Configure GPIO pins : USEDA0_Pin USEDA4_Pin USEDA5_Pin USEDA6_Pin 
 388:Src/main.c    ****                            USEDA7_Pin USEDA9_Pin */
 389:Src/main.c    **** 	GPIO_InitStruct.Pin = USEDA0_Pin | USEDA4_Pin | USEDA5_Pin | USEDA6_Pin | USEDA7_Pin | USEDA9_Pin;
 141              		.loc 1 389 0
 142 00b2 40F2F123 		movw	r3, #753
 143 00b6 0793     		str	r3, [sp, #28]
 390:Src/main.c    **** 	GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 144              		.loc 1 390 0
 145 00b8 0895     		str	r5, [sp, #32]
 391:Src/main.c    **** 	GPIO_InitStruct.Pull = GPIO_NOPULL;
 146              		.loc 1 391 0
 147 00ba 0994     		str	r4, [sp, #36]
 392:Src/main.c    **** 	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 148              		.loc 1 392 0
 149 00bc 07A9     		add	r1, sp, #28
 150 00be 1448     		ldr	r0, .L3+16
 151 00c0 FFF7FEFF 		bl	HAL_GPIO_Init
 152              	.LVL3:
 393:Src/main.c    **** 
 394:Src/main.c    **** 	/*Configure GPIO pins : USEDB2_Pin USEDB10_Pin USEDB6_Pin USEDB9_Pin */
 395:Src/main.c    **** 	GPIO_InitStruct.Pin = USEDB2_Pin | USEDB10_Pin | USEDB6_Pin | USEDB9_Pin;
 153              		.loc 1 395 0
 154 00c4 40F24463 		movw	r3, #1604
 155 00c8 0793     		str	r3, [sp, #28]
 396:Src/main.c    **** 	GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 156              		.loc 1 396 0
 157 00ca 0895     		str	r5, [sp, #32]
 397:Src/main.c    **** 	GPIO_InitStruct.Pull = GPIO_NOPULL;
 158              		.loc 1 397 0
 159 00cc 0994     		str	r4, [sp, #36]
 398:Src/main.c    **** 	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 160              		.loc 1 398 0
 161 00ce 07A9     		add	r1, sp, #28
 162 00d0 1048     		ldr	r0, .L3+20
 163 00d2 FFF7FEFF 		bl	HAL_GPIO_Init
 164              	.LVL4:
 399:Src/main.c    **** 
 400:Src/main.c    **** 	/*Configure GPIO pins : DRV_CAL_Pin DRV_FAULT_Pin DRV_ENABLE_Pin DRV_LED_Pin 
 401:Src/main.c    ****                            LED_GREEN_Pin LED_ORANGE_Pin LED_RED_Pin LED_BLUE_Pin */
 402:Src/main.c    **** 	GPIO_InitStruct.Pin = DRV_CAL_Pin | DRV_FAULT_Pin | DRV_ENABLE_Pin | DRV_LED_Pin | LED_GREEN_Pin |
 165              		.loc 1 402 0
 166 00d6 4FF47F43 		mov	r3, #65280
 167 00da 0793     		str	r3, [sp, #28]
 403:Src/main.c    **** 	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 168              		.loc 1 403 0
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 11


 169 00dc 0123     		movs	r3, #1
 170 00de 0893     		str	r3, [sp, #32]
 404:Src/main.c    **** 	GPIO_InitStruct.Pull = GPIO_NOPULL;
 171              		.loc 1 404 0
 172 00e0 0994     		str	r4, [sp, #36]
 405:Src/main.c    **** 	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 173              		.loc 1 405 0
 174 00e2 0A94     		str	r4, [sp, #40]
 406:Src/main.c    **** 	HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 175              		.loc 1 406 0
 176 00e4 07A9     		add	r1, sp, #28
 177 00e6 3046     		mov	r0, r6
 178 00e8 FFF7FEFF 		bl	HAL_GPIO_Init
 179              	.LVL5:
 407:Src/main.c    **** 
 408:Src/main.c    **** 	/*Configure GPIO pins : USEDD4_Pin USEDD5_Pin */
 409:Src/main.c    **** 	GPIO_InitStruct.Pin = USEDD4_Pin | USEDD5_Pin;
 180              		.loc 1 409 0
 181 00ec 3023     		movs	r3, #48
 182 00ee 0793     		str	r3, [sp, #28]
 410:Src/main.c    **** 	GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 183              		.loc 1 410 0
 184 00f0 0895     		str	r5, [sp, #32]
 411:Src/main.c    **** 	GPIO_InitStruct.Pull = GPIO_NOPULL;
 185              		.loc 1 411 0
 186 00f2 0994     		str	r4, [sp, #36]
 412:Src/main.c    **** 	HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 187              		.loc 1 412 0
 188 00f4 07A9     		add	r1, sp, #28
 189 00f6 3046     		mov	r0, r6
 190 00f8 FFF7FEFF 		bl	HAL_GPIO_Init
 191              	.LVL6:
 413:Src/main.c    **** }
 192              		.loc 1 413 0
 193 00fc 0CB0     		add	sp, sp, #48
 194              	.LCFI2:
 195              		.cfi_def_cfa_offset 16
 196              		@ sp needed
 197 00fe 70BD     		pop	{r4, r5, r6, pc}
 198              	.L4:
 199              		.align	2
 200              	.L3:
 201 0100 00380240 		.word	1073887232
 202 0104 000C0240 		.word	1073875968
 203 0108 00100240 		.word	1073876992
 204 010c 00080240 		.word	1073874944
 205 0110 00000240 		.word	1073872896
 206 0114 00040240 		.word	1073873920
 207              		.cfi_endproc
 208              	.LFE132:
 210              		.section	.text._Error_Handler,"ax",%progbits
 211              		.align	1
 212              		.global	_Error_Handler
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 12


 218              	_Error_Handler:
 219              	.LFB133:
 414:Src/main.c    **** 
 415:Src/main.c    **** /* USER CODE BEGIN 4 */
 416:Src/main.c    **** 
 417:Src/main.c    **** /* USER CODE END 4 */
 418:Src/main.c    **** 
 419:Src/main.c    **** /**
 420:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 421:Src/main.c    ****   * @param  file: The file name as string.
 422:Src/main.c    ****   * @param  line: The line in file as a number.
 423:Src/main.c    ****   * @retval None
 424:Src/main.c    ****   */
 425:Src/main.c    **** void _Error_Handler(char *file, int line)
 426:Src/main.c    **** {
 220              		.loc 1 426 0
 221              		.cfi_startproc
 222              		@ Volatile: function does not return.
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226              	.LVL7:
 227              	.L6:
 228 0000 FEE7     		b	.L6
 229              		.cfi_endproc
 230              	.LFE133:
 232              		.section	.text.MX_TIM1_Init,"ax",%progbits
 233              		.align	1
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 237              		.fpu fpv4-sp-d16
 239              	MX_TIM1_Init:
 240              	.LFB130:
 261:Src/main.c    **** 
 241              		.loc 1 261 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 64
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 261:Src/main.c    **** 
 245              		.loc 1 261 0
 246 0000 00B5     		push	{lr}
 247              	.LCFI3:
 248              		.cfi_def_cfa_offset 4
 249              		.cfi_offset 14, -4
 250 0002 91B0     		sub	sp, sp, #68
 251              	.LCFI4:
 252              		.cfi_def_cfa_offset 72
 267:Src/main.c    **** 	htim1.Init.Prescaler = 0;
 253              		.loc 1 267 0
 254 0004 3048     		ldr	r0, .L21
 255 0006 314B     		ldr	r3, .L21+4
 256 0008 0360     		str	r3, [r0]
 268:Src/main.c    **** 	htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 257              		.loc 1 268 0
 258 000a 0023     		movs	r3, #0
 259 000c 4360     		str	r3, [r0, #4]
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 13


 269:Src/main.c    **** 	htim1.Init.Period = 0;
 260              		.loc 1 269 0
 261 000e 8360     		str	r3, [r0, #8]
 270:Src/main.c    **** 	htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 262              		.loc 1 270 0
 263 0010 C360     		str	r3, [r0, #12]
 271:Src/main.c    **** 	htim1.Init.RepetitionCounter = 0;
 264              		.loc 1 271 0
 265 0012 0361     		str	r3, [r0, #16]
 272:Src/main.c    **** 	if (HAL_TIM_OC_Init(&htim1) != HAL_OK)
 266              		.loc 1 272 0
 267 0014 4361     		str	r3, [r0, #20]
 273:Src/main.c    **** 	{
 268              		.loc 1 273 0
 269 0016 FFF7FEFF 		bl	HAL_TIM_OC_Init
 270              	.LVL8:
 271 001a 0028     		cmp	r0, #0
 272 001c 36D1     		bne	.L15
 278:Src/main.c    **** 	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 273              		.loc 1 278 0
 274 001e 0023     		movs	r3, #0
 275 0020 0E93     		str	r3, [sp, #56]
 279:Src/main.c    **** 	if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 276              		.loc 1 279 0
 277 0022 0F93     		str	r3, [sp, #60]
 280:Src/main.c    **** 	{
 278              		.loc 1 280 0
 279 0024 0EA9     		add	r1, sp, #56
 280 0026 2848     		ldr	r0, .L21
 281 0028 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 282              	.LVL9:
 283 002c 0028     		cmp	r0, #0
 284 002e 32D1     		bne	.L16
 285:Src/main.c    **** 	sConfigOC.Pulse = 0;
 285              		.loc 1 285 0
 286 0030 0022     		movs	r2, #0
 287 0032 0792     		str	r2, [sp, #28]
 286:Src/main.c    **** 	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 288              		.loc 1 286 0
 289 0034 0892     		str	r2, [sp, #32]
 287:Src/main.c    **** 	sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 290              		.loc 1 287 0
 291 0036 0992     		str	r2, [sp, #36]
 288:Src/main.c    **** 	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 292              		.loc 1 288 0
 293 0038 0A92     		str	r2, [sp, #40]
 289:Src/main.c    **** 	sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 294              		.loc 1 289 0
 295 003a 0B92     		str	r2, [sp, #44]
 290:Src/main.c    **** 	sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 296              		.loc 1 290 0
 297 003c 0C92     		str	r2, [sp, #48]
 291:Src/main.c    **** 	if (HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 298              		.loc 1 291 0
 299 003e 0D92     		str	r2, [sp, #52]
 292:Src/main.c    **** 	{
 300              		.loc 1 292 0
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 14


 301 0040 07A9     		add	r1, sp, #28
 302 0042 2148     		ldr	r0, .L21
 303 0044 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 304              	.LVL10:
 305 0048 50BB     		cbnz	r0, .L17
 297:Src/main.c    **** 	{
 306              		.loc 1 297 0
 307 004a 0422     		movs	r2, #4
 308 004c 07A9     		add	r1, sp, #28
 309 004e 1E48     		ldr	r0, .L21
 310 0050 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 311              	.LVL11:
 312 0054 48BB     		cbnz	r0, .L18
 302:Src/main.c    **** 	{
 313              		.loc 1 302 0
 314 0056 0822     		movs	r2, #8
 315 0058 07A9     		add	r1, sp, #28
 316 005a 1B48     		ldr	r0, .L21
 317 005c FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 318              	.LVL12:
 319 0060 40BB     		cbnz	r0, .L19
 307:Src/main.c    **** 	sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 320              		.loc 1 307 0
 321 0062 0023     		movs	r3, #0
 322 0064 0093     		str	r3, [sp]
 308:Src/main.c    **** 	sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 323              		.loc 1 308 0
 324 0066 0193     		str	r3, [sp, #4]
 309:Src/main.c    **** 	sBreakDeadTimeConfig.DeadTime = 0;
 325              		.loc 1 309 0
 326 0068 0293     		str	r3, [sp, #8]
 310:Src/main.c    **** 	sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 327              		.loc 1 310 0
 328 006a 0393     		str	r3, [sp, #12]
 311:Src/main.c    **** 	sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 329              		.loc 1 311 0
 330 006c 0493     		str	r3, [sp, #16]
 312:Src/main.c    **** 	sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 331              		.loc 1 312 0
 332 006e 4FF40052 		mov	r2, #8192
 333 0072 0592     		str	r2, [sp, #20]
 313:Src/main.c    **** 	if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 334              		.loc 1 313 0
 335 0074 0693     		str	r3, [sp, #24]
 314:Src/main.c    **** 	{
 336              		.loc 1 314 0
 337 0076 6946     		mov	r1, sp
 338 0078 1348     		ldr	r0, .L21
 339 007a FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 340              	.LVL13:
 341 007e F0B9     		cbnz	r0, .L20
 319:Src/main.c    **** }
 342              		.loc 1 319 0
 343 0080 1148     		ldr	r0, .L21
 344 0082 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 345              	.LVL14:
 320:Src/main.c    **** 
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 15


 346              		.loc 1 320 0
 347 0086 11B0     		add	sp, sp, #68
 348              	.LCFI5:
 349              		.cfi_remember_state
 350              		.cfi_def_cfa_offset 4
 351              		@ sp needed
 352 0088 5DF804FB 		ldr	pc, [sp], #4
 353              	.L15:
 354              	.LCFI6:
 355              		.cfi_restore_state
 275:Src/main.c    **** 	}
 356              		.loc 1 275 0
 357 008c 40F21311 		movw	r1, #275
 358 0090 0F48     		ldr	r0, .L21+8
 359 0092 FFF7FEFF 		bl	_Error_Handler
 360              	.LVL15:
 361              	.L16:
 282:Src/main.c    **** 	}
 362              		.loc 1 282 0
 363 0096 4FF48D71 		mov	r1, #282
 364 009a 0D48     		ldr	r0, .L21+8
 365 009c FFF7FEFF 		bl	_Error_Handler
 366              	.LVL16:
 367              	.L17:
 294:Src/main.c    **** 	}
 368              		.loc 1 294 0
 369 00a0 4FF49371 		mov	r1, #294
 370 00a4 0A48     		ldr	r0, .L21+8
 371 00a6 FFF7FEFF 		bl	_Error_Handler
 372              	.LVL17:
 373              	.L18:
 299:Src/main.c    **** 	}
 374              		.loc 1 299 0
 375 00aa 40F22B11 		movw	r1, #299
 376 00ae 0848     		ldr	r0, .L21+8
 377 00b0 FFF7FEFF 		bl	_Error_Handler
 378              	.LVL18:
 379              	.L19:
 304:Src/main.c    **** 	}
 380              		.loc 1 304 0
 381 00b4 4FF49871 		mov	r1, #304
 382 00b8 0548     		ldr	r0, .L21+8
 383 00ba FFF7FEFF 		bl	_Error_Handler
 384              	.LVL19:
 385              	.L20:
 316:Src/main.c    **** 	}
 386              		.loc 1 316 0
 387 00be 4FF49E71 		mov	r1, #316
 388 00c2 0348     		ldr	r0, .L21+8
 389 00c4 FFF7FEFF 		bl	_Error_Handler
 390              	.LVL20:
 391              	.L22:
 392              		.align	2
 393              	.L21:
 394 00c8 00000000 		.word	htim1
 395 00cc 00000140 		.word	1073807360
 396 00d0 00000000 		.word	.LC0
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 16


 397              		.cfi_endproc
 398              	.LFE130:
 400              		.section	.text.MX_TIM3_Init,"ax",%progbits
 401              		.align	1
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 405              		.fpu fpv4-sp-d16
 407              	MX_TIM3_Init:
 408              	.LFB131:
 324:Src/main.c    **** 
 409              		.loc 1 324 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 24
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413 0000 00B5     		push	{lr}
 414              	.LCFI7:
 415              		.cfi_def_cfa_offset 4
 416              		.cfi_offset 14, -4
 417 0002 87B0     		sub	sp, sp, #28
 418              	.LCFI8:
 419              		.cfi_def_cfa_offset 32
 329:Src/main.c    **** 	htim3.Init.Prescaler = 0;
 420              		.loc 1 329 0
 421 0004 1248     		ldr	r0, .L29
 422 0006 134B     		ldr	r3, .L29+4
 423 0008 0360     		str	r3, [r0]
 330:Src/main.c    **** 	htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 424              		.loc 1 330 0
 425 000a 0023     		movs	r3, #0
 426 000c 4360     		str	r3, [r0, #4]
 331:Src/main.c    **** 	htim3.Init.Period = 0;
 427              		.loc 1 331 0
 428 000e 8360     		str	r3, [r0, #8]
 332:Src/main.c    **** 	htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 429              		.loc 1 332 0
 430 0010 C360     		str	r3, [r0, #12]
 333:Src/main.c    **** 	sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 431              		.loc 1 333 0
 432 0012 0361     		str	r3, [r0, #16]
 334:Src/main.c    **** 	sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 433              		.loc 1 334 0
 434 0014 0293     		str	r3, [sp, #8]
 335:Src/main.c    **** 	sConfig.IC1Filter = 0;
 435              		.loc 1 335 0
 436 0016 0393     		str	r3, [sp, #12]
 336:Src/main.c    **** 	sConfig.Commutation_Delay = 0;
 437              		.loc 1 336 0
 438 0018 0493     		str	r3, [sp, #16]
 337:Src/main.c    **** 	if (HAL_TIMEx_HallSensor_Init(&htim3, &sConfig) != HAL_OK)
 439              		.loc 1 337 0
 440 001a 0593     		str	r3, [sp, #20]
 338:Src/main.c    **** 	{
 441              		.loc 1 338 0
 442 001c 02A9     		add	r1, sp, #8
 443 001e FFF7FEFF 		bl	HAL_TIMEx_HallSensor_Init
 444              	.LVL21:
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 17


 445 0022 58B9     		cbnz	r0, .L27
 343:Src/main.c    **** 	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 446              		.loc 1 343 0
 447 0024 5023     		movs	r3, #80
 448 0026 0093     		str	r3, [sp]
 344:Src/main.c    **** 	if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 449              		.loc 1 344 0
 450 0028 0023     		movs	r3, #0
 451 002a 0193     		str	r3, [sp, #4]
 345:Src/main.c    **** 	{
 452              		.loc 1 345 0
 453 002c 6946     		mov	r1, sp
 454 002e 0848     		ldr	r0, .L29
 455 0030 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 456              	.LVL22:
 457 0034 38B9     		cbnz	r0, .L28
 349:Src/main.c    **** 
 458              		.loc 1 349 0
 459 0036 07B0     		add	sp, sp, #28
 460              	.LCFI9:
 461              		.cfi_remember_state
 462              		.cfi_def_cfa_offset 4
 463              		@ sp needed
 464 0038 5DF804FB 		ldr	pc, [sp], #4
 465              	.L27:
 466              	.LCFI10:
 467              		.cfi_restore_state
 340:Src/main.c    **** 	}
 468              		.loc 1 340 0
 469 003c 4FF4AA71 		mov	r1, #340
 470 0040 0548     		ldr	r0, .L29+8
 471 0042 FFF7FEFF 		bl	_Error_Handler
 472              	.LVL23:
 473              	.L28:
 347:Src/main.c    **** 	}
 474              		.loc 1 347 0
 475 0046 40F25B11 		movw	r1, #347
 476 004a 0348     		ldr	r0, .L29+8
 477 004c FFF7FEFF 		bl	_Error_Handler
 478              	.LVL24:
 479              	.L30:
 480              		.align	2
 481              	.L29:
 482 0050 00000000 		.word	htim3
 483 0054 00040040 		.word	1073742848
 484 0058 00000000 		.word	.LC0
 485              		.cfi_endproc
 486              	.LFE131:
 488              		.section	.text.MX_ADC1_Init,"ax",%progbits
 489              		.align	1
 490              		.syntax unified
 491              		.thumb
 492              		.thumb_func
 493              		.fpu fpv4-sp-d16
 495              	MX_ADC1_Init:
 496              	.LFB128:
 202:Src/main.c    **** 
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 18


 497              		.loc 1 202 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 16
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501 0000 00B5     		push	{lr}
 502              	.LCFI11:
 503              		.cfi_def_cfa_offset 4
 504              		.cfi_offset 14, -4
 505 0002 85B0     		sub	sp, sp, #20
 506              	.LCFI12:
 507              		.cfi_def_cfa_offset 24
 208:Src/main.c    **** 	hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 508              		.loc 1 208 0
 509 0004 1548     		ldr	r0, .L37
 510 0006 164B     		ldr	r3, .L37+4
 511 0008 0360     		str	r3, [r0]
 209:Src/main.c    **** 	hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 512              		.loc 1 209 0
 513 000a 4FF48033 		mov	r3, #65536
 514 000e 4360     		str	r3, [r0, #4]
 210:Src/main.c    **** 	hadc1.Init.ScanConvMode = DISABLE;
 515              		.loc 1 210 0
 516 0010 0023     		movs	r3, #0
 517 0012 8360     		str	r3, [r0, #8]
 211:Src/main.c    **** 	hadc1.Init.ContinuousConvMode = DISABLE;
 518              		.loc 1 211 0
 519 0014 0361     		str	r3, [r0, #16]
 212:Src/main.c    **** 	hadc1.Init.DiscontinuousConvMode = DISABLE;
 520              		.loc 1 212 0
 521 0016 8361     		str	r3, [r0, #24]
 213:Src/main.c    **** 	hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 522              		.loc 1 213 0
 523 0018 0362     		str	r3, [r0, #32]
 214:Src/main.c    **** 	hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 524              		.loc 1 214 0
 525 001a C362     		str	r3, [r0, #44]
 215:Src/main.c    **** 	hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 526              		.loc 1 215 0
 527 001c 114A     		ldr	r2, .L37+8
 528 001e 8262     		str	r2, [r0, #40]
 216:Src/main.c    **** 	hadc1.Init.NbrOfConversion = 1;
 529              		.loc 1 216 0
 530 0020 C360     		str	r3, [r0, #12]
 217:Src/main.c    **** 	hadc1.Init.DMAContinuousRequests = DISABLE;
 531              		.loc 1 217 0
 532 0022 0122     		movs	r2, #1
 533 0024 C261     		str	r2, [r0, #28]
 218:Src/main.c    **** 	hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 534              		.loc 1 218 0
 535 0026 0363     		str	r3, [r0, #48]
 219:Src/main.c    **** 	if (HAL_ADC_Init(&hadc1) != HAL_OK)
 536              		.loc 1 219 0
 537 0028 4261     		str	r2, [r0, #20]
 220:Src/main.c    **** 	{
 538              		.loc 1 220 0
 539 002a FFF7FEFF 		bl	HAL_ADC_Init
 540              	.LVL25:
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 19


 541 002e 60B9     		cbnz	r0, .L35
 227:Src/main.c    **** 	sConfig.Rank = 1;
 542              		.loc 1 227 0
 543 0030 0123     		movs	r3, #1
 544 0032 0093     		str	r3, [sp]
 228:Src/main.c    **** 	sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 545              		.loc 1 228 0
 546 0034 0193     		str	r3, [sp, #4]
 229:Src/main.c    **** 	if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 547              		.loc 1 229 0
 548 0036 0023     		movs	r3, #0
 549 0038 0293     		str	r3, [sp, #8]
 230:Src/main.c    **** 	{
 550              		.loc 1 230 0
 551 003a 6946     		mov	r1, sp
 552 003c 0748     		ldr	r0, .L37
 553 003e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 554              	.LVL26:
 555 0042 30B9     		cbnz	r0, .L36
 234:Src/main.c    **** 
 556              		.loc 1 234 0
 557 0044 05B0     		add	sp, sp, #20
 558              	.LCFI13:
 559              		.cfi_remember_state
 560              		.cfi_def_cfa_offset 4
 561              		@ sp needed
 562 0046 5DF804FB 		ldr	pc, [sp], #4
 563              	.L35:
 564              	.LCFI14:
 565              		.cfi_restore_state
 222:Src/main.c    **** 	}
 566              		.loc 1 222 0
 567 004a DE21     		movs	r1, #222
 568 004c 0648     		ldr	r0, .L37+12
 569 004e FFF7FEFF 		bl	_Error_Handler
 570              	.LVL27:
 571              	.L36:
 232:Src/main.c    **** 	}
 572              		.loc 1 232 0
 573 0052 E821     		movs	r1, #232
 574 0054 0448     		ldr	r0, .L37+12
 575 0056 FFF7FEFF 		bl	_Error_Handler
 576              	.LVL28:
 577              	.L38:
 578 005a 00BF     		.align	2
 579              	.L37:
 580 005c 00000000 		.word	hadc1
 581 0060 00200140 		.word	1073815552
 582 0064 0100000F 		.word	251658241
 583 0068 00000000 		.word	.LC0
 584              		.cfi_endproc
 585              	.LFE128:
 587              		.section	.text.MX_SPI2_Init,"ax",%progbits
 588              		.align	1
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 20


 592              		.fpu fpv4-sp-d16
 594              	MX_SPI2_Init:
 595              	.LFB129:
 238:Src/main.c    **** 
 596              		.loc 1 238 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600 0000 08B5     		push	{r3, lr}
 601              	.LCFI15:
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 3, -8
 604              		.cfi_offset 14, -4
 241:Src/main.c    **** 	hspi2.Init.Mode = SPI_MODE_MASTER;
 605              		.loc 1 241 0
 606 0002 0E48     		ldr	r0, .L43
 607 0004 0E4B     		ldr	r3, .L43+4
 608 0006 0360     		str	r3, [r0]
 242:Src/main.c    **** 	hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 609              		.loc 1 242 0
 610 0008 4FF48273 		mov	r3, #260
 611 000c 4360     		str	r3, [r0, #4]
 243:Src/main.c    **** 	hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 612              		.loc 1 243 0
 613 000e 0023     		movs	r3, #0
 614 0010 8360     		str	r3, [r0, #8]
 244:Src/main.c    **** 	hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 615              		.loc 1 244 0
 616 0012 C360     		str	r3, [r0, #12]
 245:Src/main.c    **** 	hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 617              		.loc 1 245 0
 618 0014 0361     		str	r3, [r0, #16]
 246:Src/main.c    **** 	hspi2.Init.NSS = SPI_NSS_HARD_OUTPUT;
 619              		.loc 1 246 0
 620 0016 4361     		str	r3, [r0, #20]
 247:Src/main.c    **** 	hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 621              		.loc 1 247 0
 622 0018 4FF48022 		mov	r2, #262144
 623 001c 8261     		str	r2, [r0, #24]
 248:Src/main.c    **** 	hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 624              		.loc 1 248 0
 625 001e C361     		str	r3, [r0, #28]
 249:Src/main.c    **** 	hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 626              		.loc 1 249 0
 627 0020 0362     		str	r3, [r0, #32]
 250:Src/main.c    **** 	hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 628              		.loc 1 250 0
 629 0022 4362     		str	r3, [r0, #36]
 251:Src/main.c    **** 	hspi2.Init.CRCPolynomial = 10;
 630              		.loc 1 251 0
 631 0024 8362     		str	r3, [r0, #40]
 252:Src/main.c    **** 	if (HAL_SPI_Init(&hspi2) != HAL_OK)
 632              		.loc 1 252 0
 633 0026 0A23     		movs	r3, #10
 634 0028 C362     		str	r3, [r0, #44]
 253:Src/main.c    **** 	{
 635              		.loc 1 253 0
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 21


 636 002a FFF7FEFF 		bl	HAL_SPI_Init
 637              	.LVL29:
 638 002e 00B9     		cbnz	r0, .L42
 257:Src/main.c    **** 
 639              		.loc 1 257 0
 640 0030 08BD     		pop	{r3, pc}
 641              	.L42:
 255:Src/main.c    **** 	}
 642              		.loc 1 255 0
 643 0032 FF21     		movs	r1, #255
 644 0034 0348     		ldr	r0, .L43+8
 645 0036 FFF7FEFF 		bl	_Error_Handler
 646              	.LVL30:
 647              	.L44:
 648 003a 00BF     		.align	2
 649              	.L43:
 650 003c 00000000 		.word	hspi2
 651 0040 00380040 		.word	1073756160
 652 0044 00000000 		.word	.LC0
 653              		.cfi_endproc
 654              	.LFE129:
 656              		.section	.text.SystemClock_Config,"ax",%progbits
 657              		.align	1
 658              		.global	SystemClock_Config
 659              		.syntax unified
 660              		.thumb
 661              		.thumb_func
 662              		.fpu fpv4-sp-d16
 664              	SystemClock_Config:
 665              	.LFB127:
 149:Src/main.c    **** 
 666              		.loc 1 149 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 80
 669              		@ frame_needed = 0, uses_anonymous_args = 0
 670 0000 00B5     		push	{lr}
 671              	.LCFI16:
 672              		.cfi_def_cfa_offset 4
 673              		.cfi_offset 14, -4
 674 0002 95B0     		sub	sp, sp, #84
 675              	.LCFI17:
 676              		.cfi_def_cfa_offset 88
 677              	.LBB8:
 156:Src/main.c    **** 
 678              		.loc 1 156 0
 679 0004 0021     		movs	r1, #0
 680 0006 0191     		str	r1, [sp, #4]
 681 0008 2B4B     		ldr	r3, .L51
 682 000a 1A6C     		ldr	r2, [r3, #64]
 683 000c 42F08052 		orr	r2, r2, #268435456
 684 0010 1A64     		str	r2, [r3, #64]
 685 0012 1B6C     		ldr	r3, [r3, #64]
 686 0014 03F08053 		and	r3, r3, #268435456
 687 0018 0193     		str	r3, [sp, #4]
 688 001a 019B     		ldr	r3, [sp, #4]
 689              	.LBE8:
 690              	.LBB9:
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 22


 158:Src/main.c    **** 
 691              		.loc 1 158 0
 692 001c 0291     		str	r1, [sp, #8]
 693 001e 274B     		ldr	r3, .L51+4
 694 0020 1A68     		ldr	r2, [r3]
 695 0022 42F48042 		orr	r2, r2, #16384
 696 0026 1A60     		str	r2, [r3]
 697 0028 1B68     		ldr	r3, [r3]
 698 002a 03F48043 		and	r3, r3, #16384
 699 002e 0293     		str	r3, [sp, #8]
 700 0030 029B     		ldr	r3, [sp, #8]
 701              	.LBE9:
 162:Src/main.c    **** 	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 702              		.loc 1 162 0
 703 0032 0123     		movs	r3, #1
 704 0034 0893     		str	r3, [sp, #32]
 163:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 705              		.loc 1 163 0
 706 0036 4FF48033 		mov	r3, #65536
 707 003a 0993     		str	r3, [sp, #36]
 164:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 708              		.loc 1 164 0
 709 003c 0223     		movs	r3, #2
 710 003e 0E93     		str	r3, [sp, #56]
 165:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLM = 4;
 711              		.loc 1 165 0
 712 0040 4FF48002 		mov	r2, #4194304
 713 0044 0F92     		str	r2, [sp, #60]
 166:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLN = 168;
 714              		.loc 1 166 0
 715 0046 0422     		movs	r2, #4
 716 0048 1092     		str	r2, [sp, #64]
 167:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 717              		.loc 1 167 0
 718 004a A822     		movs	r2, #168
 719 004c 1192     		str	r2, [sp, #68]
 168:Src/main.c    **** 	RCC_OscInitStruct.PLL.PLLQ = 7;
 720              		.loc 1 168 0
 721 004e 1293     		str	r3, [sp, #72]
 169:Src/main.c    **** 	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 722              		.loc 1 169 0
 723 0050 0723     		movs	r3, #7
 724 0052 1393     		str	r3, [sp, #76]
 170:Src/main.c    **** 	{
 725              		.loc 1 170 0
 726 0054 08A8     		add	r0, sp, #32
 727 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 728              	.LVL31:
 729 005a 20BB     		cbnz	r0, .L49
 177:Src/main.c    **** 	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 730              		.loc 1 177 0
 731 005c 0F23     		movs	r3, #15
 732 005e 0393     		str	r3, [sp, #12]
 178:Src/main.c    **** 	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 733              		.loc 1 178 0
 734 0060 0223     		movs	r3, #2
 735 0062 0493     		str	r3, [sp, #16]
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 23


 179:Src/main.c    **** 	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 736              		.loc 1 179 0
 737 0064 0023     		movs	r3, #0
 738 0066 0593     		str	r3, [sp, #20]
 180:Src/main.c    **** 	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 739              		.loc 1 180 0
 740 0068 4FF4A053 		mov	r3, #5120
 741 006c 0693     		str	r3, [sp, #24]
 181:Src/main.c    **** 
 742              		.loc 1 181 0
 743 006e 4FF48053 		mov	r3, #4096
 744 0072 0793     		str	r3, [sp, #28]
 183:Src/main.c    **** 	{
 745              		.loc 1 183 0
 746 0074 0521     		movs	r1, #5
 747 0076 03A8     		add	r0, sp, #12
 748 0078 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 749              	.LVL32:
 750 007c B8B9     		cbnz	r0, .L50
 190:Src/main.c    **** 
 751              		.loc 1 190 0
 752 007e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 753              	.LVL33:
 754 0082 0F4B     		ldr	r3, .L51+8
 755 0084 A3FB0030 		umull	r3, r0, r3, r0
 756 0088 8009     		lsrs	r0, r0, #6
 757 008a FFF7FEFF 		bl	HAL_SYSTICK_Config
 758              	.LVL34:
 194:Src/main.c    **** 
 759              		.loc 1 194 0
 760 008e 0420     		movs	r0, #4
 761 0090 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 762              	.LVL35:
 197:Src/main.c    **** }
 763              		.loc 1 197 0
 764 0094 0022     		movs	r2, #0
 765 0096 1146     		mov	r1, r2
 766 0098 4FF0FF30 		mov	r0, #-1
 767 009c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 768              	.LVL36:
 198:Src/main.c    **** 
 769              		.loc 1 198 0
 770 00a0 15B0     		add	sp, sp, #84
 771              	.LCFI18:
 772              		.cfi_remember_state
 773              		.cfi_def_cfa_offset 4
 774              		@ sp needed
 775 00a2 5DF804FB 		ldr	pc, [sp], #4
 776              	.L49:
 777              	.LCFI19:
 778              		.cfi_restore_state
 172:Src/main.c    **** 	}
 779              		.loc 1 172 0
 780 00a6 AC21     		movs	r1, #172
 781 00a8 0648     		ldr	r0, .L51+12
 782 00aa FFF7FEFF 		bl	_Error_Handler
 783              	.LVL37:
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 24


 784              	.L50:
 185:Src/main.c    **** 	}
 785              		.loc 1 185 0
 786 00ae B921     		movs	r1, #185
 787 00b0 0448     		ldr	r0, .L51+12
 788 00b2 FFF7FEFF 		bl	_Error_Handler
 789              	.LVL38:
 790              	.L52:
 791 00b6 00BF     		.align	2
 792              	.L51:
 793 00b8 00380240 		.word	1073887232
 794 00bc 00700040 		.word	1073770496
 795 00c0 D34D6210 		.word	274877907
 796 00c4 00000000 		.word	.LC0
 797              		.cfi_endproc
 798              	.LFE127:
 800              		.section	.text.main,"ax",%progbits
 801              		.align	1
 802              		.global	main
 803              		.syntax unified
 804              		.thumb
 805              		.thumb_func
 806              		.fpu fpv4-sp-d16
 808              	main:
 809              	.LFB126:
  95:Src/main.c    **** 	/* USER CODE BEGIN 1 */
 810              		.loc 1 95 0
 811              		.cfi_startproc
 812              		@ Volatile: function does not return.
 813              		@ args = 0, pretend = 0, frame = 0
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815 0000 08B5     		push	{r3, lr}
 816              	.LCFI20:
 817              		.cfi_def_cfa_offset 8
 818              		.cfi_offset 3, -8
 819              		.cfi_offset 14, -4
 103:Src/main.c    **** 
 820              		.loc 1 103 0
 821 0002 FFF7FEFF 		bl	HAL_Init
 822              	.LVL39:
 110:Src/main.c    **** 
 823              		.loc 1 110 0
 824 0006 FFF7FEFF 		bl	SystemClock_Config
 825              	.LVL40:
 117:Src/main.c    **** 	MX_TIM1_Init();
 826              		.loc 1 117 0
 827 000a FFF7FEFF 		bl	MX_GPIO_Init
 828              	.LVL41:
 118:Src/main.c    **** 	MX_TIM3_Init();
 829              		.loc 1 118 0
 830 000e FFF7FEFF 		bl	MX_TIM1_Init
 831              	.LVL42:
 119:Src/main.c    **** 	MX_ADC1_Init();
 832              		.loc 1 119 0
 833 0012 FFF7FEFF 		bl	MX_TIM3_Init
 834              	.LVL43:
 120:Src/main.c    **** 	MX_SPI2_Init();
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 25


 835              		.loc 1 120 0
 836 0016 FFF7FEFF 		bl	MX_ADC1_Init
 837              	.LVL44:
 121:Src/main.c    **** 	MX_USB_DEVICE_Init();
 838              		.loc 1 121 0
 839 001a FFF7FEFF 		bl	MX_SPI2_Init
 840              	.LVL45:
 122:Src/main.c    **** 	/* USER CODE BEGIN 2 */
 841              		.loc 1 122 0
 842 001e FFF7FEFF 		bl	MX_USB_DEVICE_Init
 843              	.LVL46:
 844              	.L54:
 135:Src/main.c    **** 		HAL_GPIO_TogglePin(LED_BLUE_GPIO_Port, LED_BLUE_Pin);
 845              		.loc 1 135 0 discriminator 1
 846 0022 C820     		movs	r0, #200
 847 0024 FFF7FEFF 		bl	HAL_Delay
 848              	.LVL47:
 136:Src/main.c    **** 		HAL_GPIO_TogglePin(LED_RED_GPIO_Port, LED_RED_Pin);
 849              		.loc 1 136 0 discriminator 1
 850 0028 0A4C     		ldr	r4, .L56
 851 002a 4FF40041 		mov	r1, #32768
 852 002e 2046     		mov	r0, r4
 853 0030 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 854              	.LVL48:
 137:Src/main.c    **** 		HAL_GPIO_TogglePin(LED_ORANGE_GPIO_Port, LED_ORANGE_Pin);
 855              		.loc 1 137 0 discriminator 1
 856 0034 4FF48041 		mov	r1, #16384
 857 0038 2046     		mov	r0, r4
 858 003a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 859              	.LVL49:
 138:Src/main.c    **** 		HAL_GPIO_TogglePin(LED_GREEN_GPIO_Port, LED_GREEN_Pin);
 860              		.loc 1 138 0 discriminator 1
 861 003e 4FF40051 		mov	r1, #8192
 862 0042 2046     		mov	r0, r4
 863 0044 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 864              	.LVL50:
 139:Src/main.c    **** 	}
 865              		.loc 1 139 0 discriminator 1
 866 0048 4FF48051 		mov	r1, #4096
 867 004c 2046     		mov	r0, r4
 868 004e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 869              	.LVL51:
 870 0052 E6E7     		b	.L54
 871              	.L57:
 872              		.align	2
 873              	.L56:
 874 0054 000C0240 		.word	1073875968
 875              		.cfi_endproc
 876              	.LFE126:
 878              		.comm	htim3,60,4
 879              		.comm	htim1,60,4
 880              		.comm	hspi2,88,4
 881              		.comm	hadc1,72,4
 882              		.section	.rodata.MX_TIM1_Init.str1.4,"aMS",%progbits,1
 883              		.align	2
 884              	.LC0:
 885 0000 5372632F 		.ascii	"Src/main.c\000"
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 26


 885      6D61696E 
 885      2E6300
 886              		.text
 887              	.Letext0:
 888              		.file 2 "d:\\arm_tool\\gcc-arm-none-eabi-7-2017-q4-major-win32\\arm-none-eabi\\include\\machine\\_
 889              		.file 3 "d:\\arm_tool\\gcc-arm-none-eabi-7-2017-q4-major-win32\\arm-none-eabi\\include\\sys\\_stdi
 890              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 891              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 892              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 893              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 894              		.file 8 "d:\\arm_tool\\gcc-arm-none-eabi-7-2017-q4-major-win32\\arm-none-eabi\\include\\sys\\lock.
 895              		.file 9 "d:\\arm_tool\\gcc-arm-none-eabi-7-2017-q4-major-win32\\arm-none-eabi\\include\\sys\\_type
 896              		.file 10 "d:\\arm_tool\\gcc-arm-none-eabi-7-2017-q4-major-win32\\lib\\gcc\\arm-none-eabi\\7.2.1\\i
 897              		.file 11 "d:\\arm_tool\\gcc-arm-none-eabi-7-2017-q4-major-win32\\arm-none-eabi\\include\\sys\\reen
 898              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 899              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 900              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 901              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 902              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 903              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 904              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 905              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 906              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 907              		.file 21 "d:\\arm_tool\\gcc-arm-none-eabi-7-2017-q4-major-win32\\arm-none-eabi\\include\\stdlib.h"
 908              		.file 22 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 909              		.file 23 "Inc/usb_device.h"
 910              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 911              		.file 25 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s 			page 27


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:201    .text.MX_GPIO_Init:00000100 $d
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:211    .text._Error_Handler:00000000 $t
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:218    .text._Error_Handler:00000000 _Error_Handler
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:233    .text.MX_TIM1_Init:00000000 $t
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:239    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:394    .text.MX_TIM1_Init:000000c8 $d
                            *COM*:0000003c htim1
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:401    .text.MX_TIM3_Init:00000000 $t
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:407    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:482    .text.MX_TIM3_Init:00000050 $d
                            *COM*:0000003c htim3
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:489    .text.MX_ADC1_Init:00000000 $t
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:495    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:580    .text.MX_ADC1_Init:0000005c $d
                            *COM*:00000048 hadc1
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:588    .text.MX_SPI2_Init:00000000 $t
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:594    .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:650    .text.MX_SPI2_Init:0000003c $d
                            *COM*:00000058 hspi2
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:657    .text.SystemClock_Config:00000000 $t
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:664    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:793    .text.SystemClock_Config:000000b8 $d
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:801    .text.main:00000000 $t
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:808    .text.main:00000000 main
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:874    .text.main:00000054 $d
C:\Users\hwang\AppData\Local\Temp\ccPs0jIF.s:883    .rodata.MX_TIM1_Init.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_TIM_OC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_OC_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_TIMEx_HallSensor_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_SPI_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_USB_DEVICE_Init
HAL_Delay
HAL_GPIO_TogglePin
